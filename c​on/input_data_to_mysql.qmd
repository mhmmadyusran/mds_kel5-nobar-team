---
title: "input data to mysql"
format: html
editor: visual
---

# Load Library

```{r}
library(DBI)
library(RMySQL)
library(tidyverse)
library(glue)
```

# Koneksi Ke MySQL (dbngin)

```{r}
db_config <- list(
  host = "127.0.0.1",
  port = 3308,
  user = "root",
  password = "",
  dbname = "film_dashboard"
)

con <- dbConnect(
  MySQL(),
  host = db_config$host,
  port = db_config$port,
  user = db_config$user,
  password = db_config$password
)

tryCatch({
  dbExecute(con, glue("CREATE DATABASE IF NOT EXISTS {db_config$dbname}"))
  dbExecute(con, glue("USE {db_config$dbname}"))
  message("Database {db_config$dbname} berhasil dibuat/ditemukan")
}, error = function(e) {
  message("Gagal membuat database: ", e$message)
})
```

# Membuat Entity (Tabel)

```{r}
# Tabel Directors
dbExecute(con, "
CREATE TABLE IF NOT EXISTS directors (
  director_id VARCHAR(5) PRIMARY KEY,
  director_name VARCHAR(255)
)
")

# Tabel Films
dbExecute(con, "
CREATE TABLE IF NOT EXISTS films (
  film_id VARCHAR(5) PRIMARY KEY,
  title VARCHAR(255),
  release_year INT,
  duration INT,
  genre VARCHAR(100),
  vote_count INT,
  film_rating FLOAT,
  director_id VARCHAR(5),
  FOREIGN KEY (director_id) REFERENCES directors(director_id)
)
")

# Tabel Actors
dbExecute(con, "
CREATE TABLE IF NOT EXISTS actors (
  actor_id VARCHAR(5) PRIMARY KEY,
  actor_name VARCHAR(255)
)
")

# Tabel Casting (Relasi Many-to-Many Film dan Aktor)
dbExecute(con, "
CREATE TABLE IF NOT EXISTS casting (
  film_id VARCHAR(5),
  actor_id VARCHAR(5),
  FOREIGN KEY (film_id) REFERENCES films(film_id),
  FOREIGN KEY (actor_id) REFERENCES actors(actor_id),
  PRIMARY KEY (film_id, actor_id)
)
")

# Tabel Reviewers
dbExecute(con, "
CREATE TABLE IF NOT EXISTS reviewers (
  reviewer_id VARCHAR(5) PRIMARY KEY,
  reviewer_name VARCHAR(255)
)
")

# Tabel Reviews
dbExecute(con, "
CREATE TABLE IF NOT EXISTS reviews (
  review_id VARCHAR(7) PRIMARY KEY,
  film_id VARCHAR(5),
  reviewer_id VARCHAR(5),
  review_date DATE,
  review_content TEXT,
  review_rating INT,
  FOREIGN KEY (film_id) REFERENCES films(film_id),
  FOREIGN KEY (reviewer_id) REFERENCES reviewers(reviewer_id)
)
")
```

# Read Data

```{r}
directors <- read_csv("../data/clean/directors.csv")
films <- read_csv("../data/clean/films.csv")
actors <- read_csv("../data/clean/actors.csv")
casting <- read_csv("../data/clean/casting.csv")
reviewers <- read_csv("../data/clean/reviewers.csv")
reviews <- read_csv("../data/clean/reviews.csv")

glimpse(directors)
glimpse(films)
glimpse(actors)
glimpse(casting)
glimpse(reviewers)
glimpse(reviews)
```

# Insert Data ke MySQL

```{r}
# 1. Insert into directors
for (i in 1:nrow(directors)) {
  dbExecute(con, glue(
    "INSERT INTO directors (director_id, director_name) VALUES ('{directors$director_id[i]}', '{directors$director[i]}')"
  ))
}

# 2. Insert into films
for (i in 1:nrow(films)) {
  dbExecute(con, glue(
    "INSERT INTO films (film_id, title, release_year, duration, genre, vote_count, film_rating, director_id)
     VALUES ('{films$film_id[i]}', '{films$title[i]}', {films$release_year[i]}, {films$duration[i]}, '{films$genre[i]}', {films$vote_count[i]}, {films$film_rating[i]}, '{films$director_id[i]}')"
  ))
}

# 3. Insert into actors
for (i in 1:nrow(actors)) {
  dbExecute(con, glue(
    "INSERT INTO actors (actor_id, actor_name) VALUES ('{actors$actor_id[i]}', '{actors$actor_name[i]}')"
  ))
}

# 4. Insert into casting
for (i in 1:nrow(casting)) {
  dbExecute(con, glue(
    "INSERT INTO casting (film_id, actor_id) VALUES ('{casting$film_id[i]}', '{casting$actor_id[i]}')"
  ))
}

# 5. Insert into reviewers
for (i in 1:nrow(reviewers)) {
  dbExecute(con, glue(
    "INSERT INTO reviewers (reviewer_id, reviewer_name) VALUES ('{reviewers$reviewer_id[i]}', '{reviewers$reviewer_name[i]}')"
  ))
}

# 6. Insert into reviews
# Bersihkan kutip satu dalam review_content agar tidak bentrok dengan SQL
reviews$review_content <- gsub("'", "''", reviews$review_content)

for (i in 1:nrow(reviews)) {
  dbExecute(con, glue(
    "INSERT INTO reviews (review_id, film_id, reviewer_id, review_date, review_content, review_rating)
     VALUES ('{reviews$review_id[i]}', '{reviews$film_id[i]}', '{reviews$reviewer_id[i]}', '{reviews$review_date[i]}', '{reviews$review_content[i]}', {reviews$review_rating[i]})"
  ))
}
```

# Cek Data (Verifikasi)

```{r}
dbGetQuery(con, "SELECT * FROM directors")
dbGetQuery(con, "SELECT * FROM films")
dbGetQuery(con, "SELECT * FROM actors")
dbGetQuery(con, "SELECT * FROM casting")
dbGetQuery(con, "SELECT * FROM reviewers")
dbGetQuery(con, "SELECT * FROM reviews")
```

# Menutup Koneksi

```{r}
dbDisconnect(con)
message("Koneksi ke MySQL ditutup.")
```
